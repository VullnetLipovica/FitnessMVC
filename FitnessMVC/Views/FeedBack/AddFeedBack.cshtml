@using FitnessMVC.Data
@using Microsoft.AspNetCore.Identity
@model FitnessMVC.Models.FeedBack
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "AddFeedBack";
}

<h1 class ="text-white">AddFeedBack</h1>

<h4 class="text-white">FeedBack</h4>

<h1>@User.Identity?.Name</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddFeedBack">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group text-white">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" readonly value="@User.Identity?.Name" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group text-white">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group text-white">
                <label asp-for="Text" class="control-label"></label>
                <input asp-for="Text" class="form-control" />
                <span asp-validation-for="Text" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="text-white">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
